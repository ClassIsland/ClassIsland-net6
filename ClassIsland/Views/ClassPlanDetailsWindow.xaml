<ci:MyWindow x:Class="ClassIsland.Views.ClassPlanDetailsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ClassIsland.Views"
        xmlns:ci="http://classisland.tech/schemas/xaml/core"
        xmlns:windows="clr-namespace:Walterlv.Windows;assembly=ClassIsland.Core"
        xmlns:controls="clr-namespace:ClassIsland.Controls"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:services="clr-namespace:ClassIsland.Core.Abstractions.Services;assembly=ClassIsland.Core"
        mc:Ignorable="d"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{StaticResource HarmonyOsSans}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="14"
        WindowStartupLocation="CenterOwner"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Title="课表详细信息"
        d:DataContext="{d:DesignInstance local:ClassPlanDetailsWindow}"
        Height="500" Width="800">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" MinWidth="300" MaxWidth="500"/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <!-- 时间点选择 -->
        <DataGrid Grid.Row="1" Grid.Column="0"
                  ItemsSource="{Binding ViewModel.Classes}"
                  AutoGenerateColumns="False"
                  CanUserAddRows="False"
                  IsReadOnly="True"
                  SelectedItem="{Binding ViewModel.SelectedLesson}"
                  VirtualizingPanel.ScrollUnit="Pixel">

            <DataGrid.Columns>
                <DataGridTemplateColumn Header="时间">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock>
                                <Run
                                    Text="{Binding TimeLayoutItem.StartSecond, StringFormat={}{0:HH:mm:ss}}" />
                                <Run Text="-" />
                                <Run
                                    Text="{Binding TimeLayoutItem.EndSecond, StringFormat={}{0:HH:mm:ss}}" />
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="科目" Binding="{Binding Subject.Name}"/>
            </DataGrid.Columns>
        </DataGrid>

        <!-- Splitter -->
        <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                      ResizeDirection="Columns"
                      Grid.Row="1"/>

        <!-- Details -->
        <TabControl Grid.Column="2"
                    Grid.Row="1"
                    HorizontalContentAlignment="Left">
            <TabControl.Style>
                <Style TargetType="TabControl" BasedOn="{StaticResource MaterialDesignTabControl}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ViewModel.SelectedLesson}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                    <Setter Property="Visibility" Value="Visible"/>
                </Style>
            </TabControl.Style>
            <TabItem Header="附加设置结果">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <WrapPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Stretch">
                        <ComboBox Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                                  materialDesign:HintAssist.Hint="要查看的附加设置"
                                  SelectedItem="{Binding ViewModel.SelectedControlInfo}"
                                  ItemsSource="{x:Static services:IAttachedSettingsHostService.RegisteredControls}"
                                  MinWidth="150"
                                  VerticalAlignment="Center">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <ci:IconText Kind="{Binding IconKind}" Text="{Binding Name}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <Button ToolTip="刷新"
                                Margin="8 0 0 0"
                                VerticalAlignment="Center"
                                Padding="0"
                                HorizontalAlignment="Right"
                                Style="{StaticResource MaterialDesignToolForegroundButton}"
                                Click="ButtonRefresh2_OnClick"
                                Content="{materialDesign:PackIcon Refresh}" />
                    </WrapPanel>
                    <TextBlock Grid.Row="1" TextWrapping="Wrap"
                               Margin="4">
                        <Run Text="以下的附加设置将按从上到下的顺序使用。"/><LineBreak/>
                        <Run Text="{Binding ViewModel.Summary}"/>
                    </TextBlock>
                    <ListBox Grid.Row="2"
                             ItemsSource="{Binding ViewModel.Nodes}">
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem" BasedOn="{StaticResource MaterialDesignListBoxItem}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Grid Margin="0 4 4 4">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="4"/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <Border Grid.Column="0"
                                                        Grid.ColumnSpan="2"
                                                        HorizontalAlignment="Stretch"
                                                        VerticalAlignment="Top"
                                                        Height="24"
                                                        Opacity="0.25"
                                                        Background="{DynamicResource PrimaryHueMidBrush}">
                                                    <Border.Style>
                                                        <Style TargetType="Border">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding State, Mode=OneWay}" Value="Enabled">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </Style>
                                                    </Border.Style>
                                                </Border>
                                                <materialDesign:ColorZone Grid.Column="0"
                                                                          HorizontalAlignment="Stretch"
                                                                          VerticalAlignment="Top"
                                                                          Height="24">
                                                    <materialDesign:ColorZone.Style>
                                                        <Style TargetType="materialDesign:ColorZone">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding State}" Value="Enabled">
                                                                    <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding State}" Value="Override">
                                                                    <Setter Property="Background" Value="Orange"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </materialDesign:ColorZone.Style>
                                                </materialDesign:ColorZone>
                                                <ci:AttachedSettingsControlPresenter
                                                    Grid.Column="1"
                                                    Margin="4 0 0 0"
                                                    ContentId="{Binding Address.Guid, Mode=OneWay}"
                                                    ContentIndex="{Binding Address.Index, Mode=OneWay}"
                                                    TargetObject="{Binding Node.Object, Mode=OneWay}"
                                                    ControlInfo="{Binding ViewModel.DisplayControlInfo, RelativeSource={RelativeSource FindAncestor, AncestorType=local:ClassPlanDetailsWindow}, Mode=OneWay}"
                                                    IsDependencyMode="True"
                                                    State="{Binding State, Mode=OneWay}">
                                                </ci:AttachedSettingsControlPresenter>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                </Grid>
            </TabItem>
        </TabControl>

        <StackPanel Grid.Column="2" 
                    Grid.Row="1"
                    VerticalAlignment="Center" HorizontalAlignment="Center">
            <StackPanel.Style>
                <Style TargetType="StackPanel">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ViewModel.SelectedLesson}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                    <Setter Property="Visibility" Value="Collapsed"/>
                </Style>
            </StackPanel.Style>
            <materialDesign:PackIcon Kind="FileChartOutline" Width="72" Height="72"
                                     HorizontalAlignment="Center"/>
            <TextBlock Text="在左侧课表中选择一节课程，然后在此处查看详细信息。" TextWrapping="Wrap"
                       Margin="0 8 0 0"/>
        </StackPanel>

        <!-- AppBar -->
        <materialDesign:ColorZone Grid.Column="0" Grid.ColumnSpan="3"
                                  Grid.Row="0" Mode="PrimaryMid"
                                  Padding="16"
                                  materialDesign:ElevationAssist.Elevation="Dp4">
            <Grid>
                <StackPanel Orientation="Horizontal" Margin="4 0">
                    <StackPanel.Resources>
                        <Style TargetType="materialDesign:Chip" BasedOn="{StaticResource MaterialDesignOutlineChip}">
                            <Setter Property="Foreground"
                                    Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" />
                            <Setter Property="BorderBrush"
                                    Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground), Converter={StaticResource SolidColorBrushOpacityConverter}, ConverterParameter=0.5, Mode=OneWay}" />
                            <Setter Property="IconForeground" Value="{DynamicResource MaterialDesignBody}" />
                            <Setter Property="IconBackground"
                                    Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground), Converter={StaticResource SolidColorBrushOpacityConverter}, ConverterParameter=0.5, Mode=OneWay}" />
                            <Setter Property="Margin" Value="0 -8 6 -8" />
                        </Style>
                    </StackPanel.Resources>
                    <TextBlock Text="课表详细信息" Style="{StaticResource MaterialDesignHeadline6TextBlock}"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center" Margin="0,0,16,0" />
                    <materialDesign:Chip
                        ToolTip="课表">
                        <materialDesign:Chip.Style>
                            <Style TargetType="materialDesign:Chip"
                                   BasedOn="{StaticResource MaterialDesignOutlineChip}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ViewModel.ClassPlan.IsOverlay}" Value="True">
                                        <Setter Property="Icon" Value="{materialDesign:PackIcon LayersOutline}" />
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Foreground"
                                        Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" />
                                <Setter Property="BorderBrush"
                                        Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground), Converter={StaticResource SolidColorBrushOpacityConverter}, ConverterParameter=0.5, Mode=OneWay}" />
                                <Setter Property="IconForeground" Value="{DynamicResource MaterialDesignBody}" />
                                <Setter Property="IconBackground"
                                        Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground), Converter={StaticResource SolidColorBrushOpacityConverter}, ConverterParameter=0.5, Mode=OneWay}" />
                                <Setter Property="Margin" Value="0 -8 6 -8" />

                                <Setter Property="Icon" Value="{materialDesign:PackIcon FileDocumentOutline}" />
                            </Style>
                        </materialDesign:Chip.Style>
                        <TextBlock>
                            <Run Text="{Binding ViewModel.ClassPlan.Name}" />
                        </TextBlock>
                    </materialDesign:Chip>
                </StackPanel>
                <Button ToolTip="刷新"
                        Margin="0 -4 16 -4"
                        VerticalAlignment="Center"
                        Padding="0"
                        HorizontalAlignment="Right"
                        Style="{StaticResource MaterialDesignToolForegroundButton}"
                        Click="ButtonBase_OnClick"
                        Content="{materialDesign:PackIcon Refresh, Size=24}" />
            </Grid>
        </materialDesign:ColorZone>
        <windows:AsyncBox Grid.Column="0" Grid.ColumnSpan="3"
                          Grid.Row="0" Grid.RowSpan="2"
                          VerticalAlignment="Bottom" Height="6" LoadingViewType="controls:LoadingMask"/>
    </Grid>
</ci:MyWindow>
